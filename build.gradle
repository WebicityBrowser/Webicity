import org.gradle.internal.os.OperatingSystem

plugins {
	id 'com.github.johnrengelman.shadow' version '6.1.0'
	id 'application'
	id 'java'
	id 'eclipse'
}

switch (OperatingSystem.current()) {
	case OperatingSystem.LINUX:
		def osArch = System.getProperty("os.arch")
		project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
			? "arm64"
			: "natives-linux"
		project.ext.skijaNatives = "skija-linux"
		project.ext.skijaVersion = "0.102.0"
		break
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		project.ext.skijaNatives = "skija-windows"
		project.ext.skijaVersion = "0.102.0"
		break
}

repositories {
	mavenCentral()
	maven {
		url 'https://jitpack.io'
	}
}

dependencies {
	implementation 'com.google.code.gson:gson:2.8.7'
	//implementation 'net.java.dev.jna:jna:5.5.0'
	implementation 'com.github.marianobarrios:tls-channel:0.5.0'
	implementation 'org.brotli:dec:0.1.2'
	implementation 'org.jline:jline-terminal-jna:3.21.0'
	
	implementation 'com.github.taucher2003:t2003-logger-impl:1.0.1'
	implementation 'com.github.taucher2003:t2003-logger-binder:1.0.1'
	
	implementation platform("org.lwjgl:lwjgl-bom:3.2.3")

	implementation "org.lwjgl:lwjgl"
	implementation "org.lwjgl:lwjgl-glfw"
	implementation "org.lwjgl:lwjgl-openal"
	implementation "org.lwjgl:lwjgl-opengl"
	implementation "org.lwjgl:lwjgl-stb"
	runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
	
	implementation "io.github.humbleui:${skijaNatives}:${skijaVersion}"
	
	testImplementation "org.junit.jupiter:junit-jupiter-engine:5.8.1"
	
	implementation project(":Lace")
	implementation project(":Lace-Skija-Backend")
	implementation project(":Lace-SimpleLaF")
	implementation project(":Lace-Basics")
	implementation project(":LaceImpUtils")
}

sourceSets {
	main {
		java {
			srcDirs = [
				'src/main/java/everyos.api.getopts',
				'src/main/java/everyos.browser.spec',
				'src/main/java/everyos.browser.webicity',
				'src/main/java/everyos.browser.webicity.lacewebextensions',
				'src/main/java/everyos.browser.webicity.webttyg',
				'src/main/java/everyos.browser.webicitybrowser',
				'src/main/java/everyos.engine.ttyg.core',
				'src/main/java/everyos.engine.ttyg.jlinerenderer',
			]
		}
	}
}

test {
	useJUnitPlatform()
}

mainClassName = "everyos.browser.webicitybrowser.Webicity"

jar {
	manifest {
		attributes(
			"Main-Class": mainClassName
		)
	}
}